-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity myTopFuncSem is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    stg : IN STD_LOGIC_VECTOR (31 downto 0);
    d : IN STD_LOGIC_VECTOR (31 downto 0);
    s : IN STD_LOGIC_VECTOR (31 downto 0);
    j : IN STD_LOGIC_VECTOR (31 downto 0);
    ew : OUT STD_LOGIC_VECTOR (31 downto 0);
    ew_ap_vld : OUT STD_LOGIC;
    ns : OUT STD_LOGIC_VECTOR (31 downto 0);
    ns_ap_vld : OUT STD_LOGIC );
end;


architecture behav of myTopFuncSem is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "myTopFuncSem_myTopFuncSem,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100t-csg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.876000,HLS_SYN_LAT=1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=17,HLS_SYN_LUT=589,HLS_VERSION=2020_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal icmp_ln2_fu_74_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln2_reg_692 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln3_fu_80_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln3_reg_702 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln12_fu_86_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln12_reg_710 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln16_fu_92_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln16_reg_719 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln11_fu_98_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln11_reg_728 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln24_fu_104_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln24_reg_737 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln3_fu_110_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln3_reg_746 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln3_1_fu_116_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln3_1_reg_752 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln39_fu_122_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln39_reg_758 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln13_fu_128_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln13_reg_763 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln37_fu_134_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln37_reg_770 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln37_1_fu_146_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln37_1_reg_776 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln24_3_fu_164_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln24_3_reg_781 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln57_fu_176_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln57_reg_787 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln66_fu_194_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln66_reg_793 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal or_ln105_fu_615_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln37_4_fu_140_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln24_1_fu_152_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln24_2_fu_158_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln57_fu_170_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln66_fu_182_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln66_1_fu_188_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln24_fu_208_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln27_fu_212_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln27_fu_218_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln3_fu_223_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln3_1_fu_227_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln11_fu_204_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln12_fu_243_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln13_fu_247_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln16_fu_252_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln16_fu_258_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln38_fu_239_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln2_fu_200_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln11_1_fu_286_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln13_1_fu_291_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln13_2_fu_296_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln11_fu_280_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln13_3_fu_305_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln27_fu_310_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln27_2_fu_321_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln24_1_fu_301_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln27_3_fu_327_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln27_1_fu_315_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln2_fu_274_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln27_4_fu_333_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp471_fu_344_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp470_fu_339_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp53_fu_349_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_sel_tmp53_fu_355_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln45_fu_269_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln45_fu_367_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln37_fu_379_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln16_1_fu_390_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln37_fu_385_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln16_1_fu_395_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln37_1_fu_401_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln37_2_fu_412_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln37_1_fu_406_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln37_3_fu_418_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln45_fu_373_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp92_fu_424_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln16_fu_263_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp54_fu_361_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln38_fu_438_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3_fu_450_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln37_5_fu_460_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln37_2_fu_465_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln3_3_fu_455_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln37_6_fu_470_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln37_7_fu_475_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln38_fu_444_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp129_fu_481_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln3_2_fu_233_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp93_fu_430_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln24_4_fu_500_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln24_2_fu_495_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln24_5_fu_504_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln11_2_fu_516_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln12_1_fu_521_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln13_4_fu_526_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln16_2_fu_537_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln16_3_fu_541_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln12_fu_553_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp130_fu_487_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln24_fu_510_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln12_1_fu_557_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln16_2_fu_547_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln12_3_fu_569_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln13_fu_531_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln12_4_fu_575_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln12_2_fu_563_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp381_demorgan_fu_587_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp418_demorgan_fu_593_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln12_5_fu_581_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln105_2_fu_611_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln105_1_fu_605_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln105_fu_621_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln105_4_fu_631_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln105_3_fu_626_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln105_1_fu_643_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln105_5_fu_637_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln105_7_fu_655_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln105_6_fu_649_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln105_fu_661_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln2_fu_599_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln105_1_fu_674_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln105_2_fu_681_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_ce_reg : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                and_ln24_3_reg_781 <= and_ln24_3_fu_164_p2;
                and_ln3_reg_746 <= and_ln3_fu_110_p2;
                icmp_ln11_reg_728 <= icmp_ln11_fu_98_p2;
                icmp_ln12_reg_710 <= icmp_ln12_fu_86_p2;
                icmp_ln13_reg_763 <= icmp_ln13_fu_128_p2;
                icmp_ln16_reg_719 <= icmp_ln16_fu_92_p2;
                icmp_ln24_reg_737 <= icmp_ln24_fu_104_p2;
                icmp_ln2_reg_692 <= icmp_ln2_fu_74_p2;
                icmp_ln37_1_reg_776 <= icmp_ln37_1_fu_146_p2;
                icmp_ln37_reg_770 <= icmp_ln37_fu_134_p2;
                icmp_ln39_reg_758 <= icmp_ln39_fu_122_p2;
                icmp_ln3_1_reg_752 <= icmp_ln3_1_fu_116_p2;
                icmp_ln3_reg_702 <= icmp_ln3_fu_80_p2;
                icmp_ln57_reg_787 <= icmp_ln57_fu_176_p2;
                icmp_ln66_reg_793 <= icmp_ln66_fu_194_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    and_ln12_1_fu_521_p2 <= (xor_ln11_2_fu_516_p2 and icmp_ln12_reg_710);
    and_ln12_2_fu_563_p2 <= (xor_ln24_fu_510_p2 and sel_tmp130_fu_487_p3);
    and_ln12_3_fu_569_p2 <= (xor_ln16_2_fu_547_p2 and or_ln12_1_fu_557_p2);
    and_ln12_4_fu_575_p2 <= (xor_ln13_fu_531_p2 and and_ln12_3_fu_569_p2);
    and_ln12_5_fu_581_p2 <= (and_ln12_4_fu_575_p2 and and_ln12_2_fu_563_p2);
    and_ln12_fu_243_p2 <= (icmp_ln2_reg_692 and icmp_ln12_reg_710);
    and_ln13_1_fu_291_p2 <= (xor_ln11_1_fu_286_p2 and icmp_ln13_reg_763);
    and_ln13_2_fu_296_p2 <= (icmp_ln12_reg_710 and and_ln13_1_fu_291_p2);
    and_ln13_3_fu_305_p2 <= (icmp_ln13_reg_763 and and_ln12_fu_243_p2);
    and_ln13_4_fu_526_p2 <= (and_ln24_3_reg_781 and and_ln12_1_fu_521_p2);
    and_ln13_fu_247_p2 <= (icmp_ln24_reg_737 and and_ln12_fu_243_p2);
    and_ln16_1_fu_395_p2 <= (xor_ln16_1_fu_390_p2 and and_ln13_fu_247_p2);
    and_ln16_2_fu_537_p2 <= (icmp_ln24_reg_737 and icmp_ln16_reg_719);
    and_ln16_3_fu_541_p2 <= (and_ln16_2_fu_537_p2 and and_ln12_1_fu_521_p2);
    and_ln16_fu_263_p2 <= (or_ln16_fu_258_p2 and or_ln11_fu_204_p2);
    and_ln24_1_fu_301_p2 <= (icmp_ln13_reg_763 and and_ln3_reg_746);
    and_ln24_2_fu_495_p2 <= (xor_ln2_fu_274_p2 and icmp_ln11_reg_728);
    and_ln24_3_fu_164_p2 <= (icmp_ln24_2_fu_158_p2 and icmp_ln24_1_fu_152_p2);
    and_ln24_4_fu_500_p2 <= (icmp_ln3_reg_702 and and_ln24_3_reg_781);
    and_ln24_5_fu_504_p2 <= (and_ln24_4_fu_500_p2 and and_ln24_2_fu_495_p2);
    and_ln24_fu_208_p2 <= (icmp_ln24_reg_737 and and_ln3_reg_746);
    and_ln27_fu_310_p2 <= (icmp_ln16_reg_719 and and_ln24_fu_208_p2);
    and_ln2_fu_200_p2 <= (icmp_ln3_reg_702 and icmp_ln2_reg_692);
    and_ln37_1_fu_401_p2 <= (icmp_ln2_reg_692 and and_ln27_fu_310_p2);
    and_ln37_2_fu_465_p2 <= (or_ln37_5_fu_460_p2 and icmp_ln11_reg_728);
    and_ln37_fu_385_p2 <= (or_ln37_fu_379_p2 and icmp_ln2_reg_692);
    and_ln38_fu_239_p2 <= (icmp_ln39_reg_758 and icmp_ln24_reg_737);
    and_ln3_1_fu_227_p2 <= (or_ln3_fu_223_p2 and or_ln27_fu_218_p2);
    and_ln3_2_fu_233_p2 <= (or_ln11_fu_204_p2 and and_ln3_1_fu_227_p2);
    and_ln3_3_fu_455_p2 <= (xor_ln3_fu_450_p2 and icmp_ln11_reg_728);
    and_ln3_fu_110_p2 <= (icmp_ln3_fu_80_p2 and icmp_ln11_fu_98_p2);
    and_ln45_fu_269_p2 <= (icmp_ln12_reg_710 and and_ln38_fu_239_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);

    ap_done_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ew <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln105_fu_661_p3),32));

    ew_ap_vld_assign_proc : process(ap_CS_fsm_state2, or_ln105_fu_615_p2)
    begin
        if (((or_ln105_fu_615_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ew_ap_vld <= ap_const_logic_1;
        else 
            ew_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln11_fu_98_p2 <= "1" when (stg = ap_const_lv32_0) else "0";
    icmp_ln12_fu_86_p2 <= "1" when (d = ap_const_lv32_0) else "0";
    icmp_ln13_fu_128_p2 <= "1" when (s = ap_const_lv32_0) else "0";
    icmp_ln16_fu_92_p2 <= "1" when (j = ap_const_lv32_0) else "0";
    icmp_ln24_1_fu_152_p2 <= "0" when (s = ap_const_lv32_0) else "1";
    icmp_ln24_2_fu_158_p2 <= "0" when (s = ap_const_lv32_1) else "1";
    icmp_ln24_fu_104_p2 <= "1" when (s = ap_const_lv32_1) else "0";
    icmp_ln2_fu_74_p2 <= "1" when (stg = ap_const_lv32_1) else "0";
    icmp_ln37_1_fu_146_p2 <= "1" when (or_ln37_4_fu_140_p2 = ap_const_lv32_0) else "0";
    icmp_ln37_fu_134_p2 <= "0" when (stg = ap_const_lv32_1) else "1";
    icmp_ln39_fu_122_p2 <= "1" when (j = ap_const_lv32_1) else "0";
    icmp_ln3_1_fu_116_p2 <= "0" when (stg = ap_const_lv32_0) else "1";
    icmp_ln3_fu_80_p2 <= "1" when (d = ap_const_lv32_1) else "0";
    icmp_ln57_fu_176_p2 <= "1" when (or_ln57_fu_170_p2 = ap_const_lv32_0) else "0";
    icmp_ln66_fu_194_p2 <= "1" when (or_ln66_1_fu_188_p2 = ap_const_lv32_0) else "0";
    not_sel_tmp53_fu_355_p2 <= (sel_tmp53_fu_349_p2 xor ap_const_lv1_1);
    ns <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln105_2_fu_681_p2),32));

    ns_ap_vld_assign_proc : process(ap_CS_fsm_state2, or_ln105_fu_615_p2)
    begin
        if (((or_ln105_fu_615_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ns_ap_vld <= ap_const_logic_1;
        else 
            ns_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    or_ln105_1_fu_605_p2 <= (and_ln2_fu_200_p2 or and_ln12_5_fu_581_p2);
    or_ln105_2_fu_611_p2 <= (icmp_ln66_reg_793 or icmp_ln57_reg_787);
    or_ln105_3_fu_626_p2 <= (xor_ln105_fu_621_p2 or icmp_ln66_reg_793);
    or_ln105_4_fu_631_p2 <= (or_ln105_2_fu_611_p2 or and_ln2_fu_200_p2);
    or_ln105_5_fu_637_p2 <= (sel_tmp92_fu_424_p2 or sel_tmp129_fu_481_p2);
    or_ln105_6_fu_649_p2 <= (xor_ln105_1_fu_643_p2 or or_ln105_3_fu_626_p2);
    or_ln105_7_fu_655_p2 <= (or_ln105_5_fu_637_p2 or or_ln105_4_fu_631_p2);
    or_ln105_fu_615_p2 <= (or_ln105_2_fu_611_p2 or or_ln105_1_fu_605_p2);
    or_ln11_fu_204_p2 <= (icmp_ln2_reg_692 or icmp_ln11_reg_728);
    or_ln12_1_fu_557_p2 <= (or_ln12_fu_553_p2 or and_ln2_fu_200_p2);
    or_ln12_fu_553_p2 <= (icmp_ln37_reg_770 or icmp_ln12_reg_710);
    or_ln16_fu_258_p2 <= (xor_ln16_fu_252_p2 or icmp_ln16_reg_719);
    or_ln27_1_fu_315_p2 <= (xor_ln11_fu_280_p2 or and_ln13_2_fu_296_p2);
    or_ln27_2_fu_321_p2 <= (and_ln27_fu_310_p2 or and_ln13_3_fu_305_p2);
    or_ln27_3_fu_327_p2 <= (or_ln27_2_fu_321_p2 or and_ln24_1_fu_301_p2);
    or_ln27_4_fu_333_p2 <= (or_ln27_3_fu_327_p2 or or_ln27_1_fu_315_p2);
    or_ln27_fu_218_p2 <= (xor_ln27_fu_212_p2 or icmp_ln16_reg_719);
    or_ln2_fu_599_p2 <= (sel_tmp418_demorgan_fu_593_p2 or and_ln2_fu_200_p2);
    or_ln37_1_fu_406_p2 <= (and_ln37_fu_385_p2 or and_ln16_1_fu_395_p2);
    or_ln37_2_fu_412_p2 <= (and_ln37_1_fu_401_p2 or and_ln13_3_fu_305_p2);
    or_ln37_3_fu_418_p2 <= (or_ln37_2_fu_412_p2 or or_ln37_1_fu_406_p2);
    or_ln37_4_fu_140_p2 <= (stg or s);
    or_ln37_5_fu_460_p2 <= (icmp_ln24_reg_737 or and_ln13_3_fu_305_p2);
    or_ln37_6_fu_470_p2 <= (icmp_ln37_1_reg_776 or and_ln37_2_fu_465_p2);
    or_ln37_7_fu_475_p2 <= (or_ln37_6_fu_470_p2 or and_ln3_3_fu_455_p2);
    or_ln37_fu_379_p2 <= (or_ln27_1_fu_315_p2 or and_ln24_1_fu_301_p2);
    or_ln38_fu_438_p2 <= (and_ln38_fu_239_p2 or and_ln2_fu_200_p2);
    or_ln3_fu_223_p2 <= (icmp_ln3_reg_702 or icmp_ln3_1_reg_752);
    or_ln45_fu_367_p2 <= (and_ln45_fu_269_p2 or and_ln2_fu_200_p2);
    or_ln57_fu_170_p2 <= (stg or d);
    or_ln66_1_fu_188_p2 <= (or_ln66_fu_182_p2 or or_ln57_fu_170_p2);
    or_ln66_fu_182_p2 <= (s or j);
    sel_tmp129_fu_481_p2 <= (xor_ln38_fu_444_p2 and or_ln37_7_fu_475_p2);
    sel_tmp130_fu_487_p3 <= 
        and_ln3_2_fu_233_p2 when (sel_tmp129_fu_481_p2(0) = '1') else 
        sel_tmp93_fu_430_p3;
    sel_tmp381_demorgan_fu_587_p2 <= (sel_tmp92_fu_424_p2 or sel_tmp53_fu_349_p2);
    sel_tmp418_demorgan_fu_593_p2 <= (sel_tmp381_demorgan_fu_587_p2 or sel_tmp129_fu_481_p2);
    sel_tmp53_fu_349_p2 <= (tmp471_fu_344_p2 and tmp470_fu_339_p2);
    sel_tmp54_fu_361_p2 <= (or_ln11_fu_204_p2 or not_sel_tmp53_fu_355_p2);
    sel_tmp92_fu_424_p2 <= (xor_ln45_fu_373_p2 and or_ln37_3_fu_418_p2);
    sel_tmp93_fu_430_p3 <= 
        and_ln16_fu_263_p2 when (sel_tmp92_fu_424_p2(0) = '1') else 
        sel_tmp54_fu_361_p2;
    select_ln105_1_fu_674_p3 <= 
        icmp_ln66_reg_793 when (or_ln105_2_fu_611_p2(0) = '1') else 
        or_ln2_fu_599_p2;
    select_ln105_fu_661_p3 <= 
        or_ln105_6_fu_649_p2 when (or_ln105_7_fu_655_p2(0) = '1') else 
        sel_tmp53_fu_349_p2;
    tmp470_fu_339_p2 <= (xor_ln2_fu_274_p2 and icmp_ln37_reg_770);
    tmp471_fu_344_p2 <= (or_ln27_4_fu_333_p2 and icmp_ln3_1_reg_752);
    xor_ln105_1_fu_643_p2 <= (or_ln105_4_fu_631_p2 xor ap_const_lv1_1);
    xor_ln105_2_fu_681_p2 <= (select_ln105_1_fu_674_p3 xor ap_const_lv1_1);
    xor_ln105_fu_621_p2 <= (icmp_ln57_reg_787 xor ap_const_lv1_1);
    xor_ln11_1_fu_286_p2 <= (icmp_ln11_reg_728 xor ap_const_lv1_1);
    xor_ln11_2_fu_516_p2 <= (icmp_ln2_reg_692 xor and_ln2_fu_200_p2);
    xor_ln11_fu_280_p2 <= (or_ln11_fu_204_p2 xor ap_const_lv1_1);
    xor_ln13_fu_531_p2 <= (ap_const_lv1_1 xor and_ln13_4_fu_526_p2);
    xor_ln16_1_fu_390_p2 <= (icmp_ln16_reg_719 xor ap_const_lv1_1);
    xor_ln16_2_fu_547_p2 <= (ap_const_lv1_1 xor and_ln16_3_fu_541_p2);
    xor_ln16_fu_252_p2 <= (ap_const_lv1_1 xor and_ln13_fu_247_p2);
    xor_ln24_fu_510_p2 <= (ap_const_lv1_1 xor and_ln24_5_fu_504_p2);
    xor_ln27_fu_212_p2 <= (ap_const_lv1_1 xor and_ln24_fu_208_p2);
    xor_ln2_fu_274_p2 <= (ap_const_lv1_1 xor and_ln2_fu_200_p2);
    xor_ln38_fu_444_p2 <= (or_ln38_fu_438_p2 xor ap_const_lv1_1);
    xor_ln3_fu_450_p2 <= (icmp_ln3_reg_702 xor ap_const_lv1_1);
    xor_ln45_fu_373_p2 <= (or_ln45_fu_367_p2 xor ap_const_lv1_1);
end behav;
